#!/usr/bin/env bash
# reclaim-workspaces.sh
# Move all workspaces not on an active monitor to the *current* monitor.

set -euo pipefail

need() { command -v "$1" >/dev/null 2>&1 || { echo "Missing: $1" >&2; exit 1; }; }
need hyprctl
need jq

# Active (enabled) monitors by numeric id (treat missing .disabled as false)
ACTIVE_MON_IDS="$(hyprctl -j monitors | jq '[.[] | select((.disabled // false) == false) | .id]')"

# Collect workspace IDs whose monitor is -1 or not in ACTIVE_MON_IDS
WS_TO_MOVE="$(hyprctl -j workspaces | jq --argjson active "$ACTIVE_MON_IDS" '
  [ .[]
    | select(.id != -1)                               # skip sentinel
    | select(.name != "special")                      # skip special ws by name
    | . as $ws
    | ($ws.monitorID) as $mid
    | select($mid == -1 or ($active | index($mid) | not))
    | $ws.id
  ] | .[]
' -r)"

# Nothing to do?
[[ -z "${WS_TO_MOVE:-}" ]] && exit 0

# Move them to the current monitor (no focus stealing)
while IFS= read -r wid; do
  [[ -n "$wid" ]] && hyprctl dispatch moveworkspacetomonitor "$wid" current >/dev/null
done <<<"$WS_TO_MOVE"
